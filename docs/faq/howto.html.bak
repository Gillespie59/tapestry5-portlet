<!DOCTYPE html> 
<html>
	<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1"> 
	<title>Tapestry5 Portlet - How to</title> 
	<link rel="stylesheet"  href="../../css/themes/default/jquery.mobile-1.2.0.css" /> 
	<link rel="stylesheet" href="../_assets/css/jqm-docs.css"/>

	<script src="../../js/jquery.js"></script>
	<script src="../../docs/_assets/js/jqm-docs.js"></script>
	<script src="../../js/jquery.mobile-1.2.0.js"></script>

</head> 
<body> 

<div data-role="page" class="type-interior">

	<div data-role="header" data-theme="f">
		<h1>How to</h1>
		<a href="../../" data-icon="home" data-iconpos="notext" data-direction="reverse">Home</a>
		<a href="../nav.html" data-icon="search" data-iconpos="notext" data-rel="dialog" data-transition="fade">Search</a>
	</div><!-- /header -->

	<div data-role="content">
		
	<div class="content-primary">
		
	<h2>How to get parameter from portal url ?</h2>
		
	<p>you can retrieve HttpServletRequest from renderRequest</p>
			
<textarea readonly="readonly">
@Inject
private PortletRequestGlobals globals;

public String getHttpServletRequestFromRenderRequest()
{
RenderRequest renderRequest = globals.getRenderRequest();
HttpServletRequest httpRequest = (HttpServletRequest)  renderRequest.getAttribute(PortletServlet.PORTLET_SERVLET_REQUEST);  
return httpRequest.toString();
}}</textarea> 

	<p>or use tools provided by portals container. For example in Liferay we suggest to do something like<p>
		    
 		    
<textarea readonly="readonly">
@Inject
private PortletRequestGlobals globals;

HttpServletRequest request = PortalUtil.getHttpServletRequest(globals.getRenderRequest());
String myContainer = PortalUtil.getOriginalServletRequest(request).getParameter(FrontPortletConstants.CONTAINER_PARAMETER);
</textarea>
				
	<p>To enable the use of this Liferay Utilities you will have to add the following dependecy in your pom.XML<p/>
		    		
		    
<textarea readonly="readonly">
<!-- liferay dependencies -->
<dependency>
<groupId>com.liferay.portal</groupId>
<artifactId>portal-service</artifactId>
<version>6.1.0</version>
<scope>provided</scope>
</dependency></textarea> 

	<h2>How to get window state ?</h2>

	<p>The window state of a portlet is represented by the Portlet API’s WindowState class.
	This class defines (as constants) the three standard window states that portlets suport: 
	NORMAL, MINIMIZED, and MAXIMIZED. </P>
	
	<p>A portlet’s window state can be useful in customizing the  content of the portlet; if a
portlet’s window state is maximized, the portlet can show additional information to
he user that it didn’t display when the portlet was in the normal window state. </P>

	<p>Here is the portlet code need to in tapestry to get current WindowState</P>
		    
<textarea readonly="readonly">
@Inject
private PortletRequestGlobals globals;
 
public String getWindowState()
{
	return globals.getPortletRequest().getWindowState().toString();
}
}</textarea>

		
		</div><!--/content-primary -->		
		
		<div class="content-secondary">
			
			<div data-role="collapsible" data-collapsed="true" data-theme="b" data-content-theme="d">
				
					<h3>More in this section</h3>
					
					<ul data-role="listview"  data-theme="c" data-dividertheme="d">
						<li data-role="list-divider">Features</li>
						<li><a href="../../docs/faq/liferay.html">Liferay</a></li>
						<li data-theme="a"><a href="../../docs/features/howto.html">How to</a></li>	
						<li><a href="../../docs/features/features.html">Features</a></li>
						<li><a href="../../docs/features/platforms.html">Supported Portals</a></li>

				
					</ul>
			</div>
		</div>		

	</div><!-- /content -->
	
	<div data-role="footer" class="footer-docs" data-theme="c">
		<p class="jqm-version"></p>
		<p>&copy; 2012 jQuery Foundation and other contributors</p>
	</div>	
	
	
</div><!-- /page -->

</body>
</html>
